<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<aop:config>
		<aop:pointcut id="transactionOperation" expression="bean(*Service.impl)" />
		<aop:advisor advice-ref="transactionAdvice" pointcut-ref="transactionOperation" />
	</aop:config>

	<bean id="basePersistence" abstract="true">
		<property name="dataSource" ref="anotherDataSource" />
		<property name="sessionFactory" ref="anotherSessionFactory" />
	</bean>

	<bean id="transactionAdvice"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="anotherTransactionManager" />
		<property name="transactionAttributeSource">
			<bean
				class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource">
				<constructor-arg>
					<bean
						class="com.liferay.portal.spring.annotation.PortalTransactionAnnotationParser" />
				</constructor-arg>
			</bean>
		</property>
	</bean>

	<bean id="anotherHibernateSessionFactory"
		class="portal.impl.ext.hibernate.PortletHibernateConfiguration"
		lazy-init="true">
		<property name="dataSource" ref="anotherDataSource" />
		<property name="hibernateProperties">
			<props>
<!-- 				<prop key="hibernate.show_sql">true</prop> -->
<!-- 				<prop key="hibernate.max_fetch_depth">2</prop> -->
<!-- 				<prop key="hibernate.dialect"> -->
<!-- 					ec.com.kruger.utilitario.dao.commons.hibernate.dialect.DB2Dialect -->
<!-- 				</prop> -->
				<prop key="hibernate.dialect">
					org.hibernate.dialect.DB2400Dialect
				</prop>
<!-- 				<prop key="hibernate.connection.autocommit">false</prop> -->
<!-- 				<prop key="hibernate.connection.pool_size">20</prop> -->
<!-- 				<prop key="hibernate.query.substitutions">true 1, false 0</prop> -->
<!-- 				<prop key="hibernate.jdbc.use_get_generated_keys">true</prop>	         -->
				<!-- Configuraciones para cache de segundo nivel -->
				<!-- <prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
		        <prop key="hibernate.cache.region.factory_class">net.sf.ehcache.hibernate.SingletonEhCacheRegionFactory</prop>
		        <prop key="net.sf.ehcache.configurationResourceName">/META-INF/ehcache-corpv2.xml</prop>		        
		        <prop key="hibernate.generate_statistics">true</prop>
		        -->
			</props>
		</property>
	</bean>

	<bean id="anotherSessionFactory" class="com.liferay.portal.dao.orm.hibernate.SessionFactoryImpl"
		lazy-init="true">
		<property name="sessionFactoryImplementor" ref="anotherHibernateSessionFactory" />

	</bean>

	<bean id="anotherTransactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		lazy-init="true">
		<property name="dataSource" ref="anotherDataSource" />
		<property name="globalRollbackOnParticipationFailure" value="false" />
		<property name="sessionFactory" ref="anotherHibernateSessionFactory" />
	</bean>

	<bean id="anotherDataSource" class="com.liferay.portal.spring.jndi.JndiObjectFactoryBean"
		lazy-init="true">
		<property name="jndiName">
			<value>jdbc/dsmxlifera</value>
		</property>
	</bean>


</beans>