package ec.com.smx.portal.rrhh.services.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import ec.com.smx.portal.rrhh.services.model.UsuarioRol;
import ec.com.smx.portal.rrhh.services.model.UsuarioRolModel;
import ec.com.smx.portal.rrhh.services.model.UsuarioRolSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the UsuarioRol service. Represents a row in the &quot;usuario_rol&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ec.com.smx.portal.rrhh.services.model.UsuarioRolModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link UsuarioRolImpl}.
 * </p>
 *
 * @author maballe
 * @see UsuarioRolImpl
 * @see ec.com.smx.portal.rrhh.services.model.UsuarioRol
 * @see ec.com.smx.portal.rrhh.services.model.UsuarioRolModel
 * @generated
 */
@JSON(strict = true)
public class UsuarioRolModelImpl extends BaseModelImpl<UsuarioRol>
    implements UsuarioRolModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a usuario rol model instance should use the {@link ec.com.smx.portal.rrhh.services.model.UsuarioRol} interface instead.
     */
    public static final String TABLE_NAME = "usuario_rol";
    public static final Object[][] TABLE_COLUMNS = {
            { "usuariorolid", Types.BIGINT },
            { "usuarioid", Types.BIGINT },
            { "rolid", Types.BIGINT }
        };
    public static final String TABLE_SQL_CREATE = "create table usuario_rol (usuariorolid LONG not null primary key,usuarioid LONG,rolid LONG)";
    public static final String TABLE_SQL_DROP = "drop table usuario_rol";
    public static final String ORDER_BY_JPQL = " ORDER BY usuarioRol.UsuarioRolId ASC";
    public static final String ORDER_BY_SQL = " ORDER BY usuario_rol.usuariorolid ASC";
    public static final String DATA_SOURCE = "anotherDataSource";
    public static final String SESSION_FACTORY = "anotherSessionFactory";
    public static final String TX_MANAGER = "anotherTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.ec.com.smx.portal.rrhh.services.model.UsuarioRol"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.ec.com.smx.portal.rrhh.services.model.UsuarioRol"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.ec.com.smx.portal.rrhh.services.model.UsuarioRol"),
            true);
    public static long ROLID_COLUMN_BITMASK = 1L;
    public static long USUARIOID_COLUMN_BITMASK = 2L;
    public static long USUARIOROLID_COLUMN_BITMASK = 4L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.ec.com.smx.portal.rrhh.services.model.UsuarioRol"));
    private static ClassLoader _classLoader = UsuarioRol.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            UsuarioRol.class
        };
    private long _UsuarioRolId;
    private long _usuarioId;
    private long _originalUsuarioId;
    private boolean _setOriginalUsuarioId;
    private long _rolId;
    private long _originalRolId;
    private boolean _setOriginalRolId;
    private long _columnBitmask;
    private UsuarioRol _escapedModel;

    public UsuarioRolModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static UsuarioRol toModel(UsuarioRolSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        UsuarioRol model = new UsuarioRolImpl();

        model.setUsuarioRolId(soapModel.getUsuarioRolId());
        model.setUsuarioId(soapModel.getUsuarioId());
        model.setRolId(soapModel.getRolId());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<UsuarioRol> toModels(UsuarioRolSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<UsuarioRol> models = new ArrayList<UsuarioRol>(soapModels.length);

        for (UsuarioRolSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public long getPrimaryKey() {
        return _UsuarioRolId;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setUsuarioRolId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _UsuarioRolId;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return UsuarioRol.class;
    }

    @Override
    public String getModelClassName() {
        return UsuarioRol.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("UsuarioRolId", getUsuarioRolId());
        attributes.put("usuarioId", getUsuarioId());
        attributes.put("rolId", getRolId());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long UsuarioRolId = (Long) attributes.get("UsuarioRolId");

        if (UsuarioRolId != null) {
            setUsuarioRolId(UsuarioRolId);
        }

        Long usuarioId = (Long) attributes.get("usuarioId");

        if (usuarioId != null) {
            setUsuarioId(usuarioId);
        }

        Long rolId = (Long) attributes.get("rolId");

        if (rolId != null) {
            setRolId(rolId);
        }
    }

    @JSON
    @Override
    public long getUsuarioRolId() {
        return _UsuarioRolId;
    }

    @Override
    public void setUsuarioRolId(long UsuarioRolId) {
        _UsuarioRolId = UsuarioRolId;
    }

    @JSON
    @Override
    public long getUsuarioId() {
        return _usuarioId;
    }

    @Override
    public void setUsuarioId(long usuarioId) {
        _columnBitmask |= USUARIOID_COLUMN_BITMASK;

        if (!_setOriginalUsuarioId) {
            _setOriginalUsuarioId = true;

            _originalUsuarioId = _usuarioId;
        }

        _usuarioId = usuarioId;
    }

    public long getOriginalUsuarioId() {
        return _originalUsuarioId;
    }

    @JSON
    @Override
    public long getRolId() {
        return _rolId;
    }

    @Override
    public void setRolId(long rolId) {
        _columnBitmask |= ROLID_COLUMN_BITMASK;

        if (!_setOriginalRolId) {
            _setOriginalRolId = true;

            _originalRolId = _rolId;
        }

        _rolId = rolId;
    }

    public long getOriginalRolId() {
        return _originalRolId;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            UsuarioRol.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public UsuarioRol toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (UsuarioRol) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        UsuarioRolImpl usuarioRolImpl = new UsuarioRolImpl();

        usuarioRolImpl.setUsuarioRolId(getUsuarioRolId());
        usuarioRolImpl.setUsuarioId(getUsuarioId());
        usuarioRolImpl.setRolId(getRolId());

        usuarioRolImpl.resetOriginalValues();

        return usuarioRolImpl;
    }

    @Override
    public int compareTo(UsuarioRol usuarioRol) {
        long primaryKey = usuarioRol.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof UsuarioRol)) {
            return false;
        }

        UsuarioRol usuarioRol = (UsuarioRol) obj;

        long primaryKey = usuarioRol.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        UsuarioRolModelImpl usuarioRolModelImpl = this;

        usuarioRolModelImpl._originalUsuarioId = usuarioRolModelImpl._usuarioId;

        usuarioRolModelImpl._setOriginalUsuarioId = false;

        usuarioRolModelImpl._originalRolId = usuarioRolModelImpl._rolId;

        usuarioRolModelImpl._setOriginalRolId = false;

        usuarioRolModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<UsuarioRol> toCacheModel() {
        UsuarioRolCacheModel usuarioRolCacheModel = new UsuarioRolCacheModel();

        usuarioRolCacheModel.UsuarioRolId = getUsuarioRolId();

        usuarioRolCacheModel.usuarioId = getUsuarioId();

        usuarioRolCacheModel.rolId = getRolId();

        return usuarioRolCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(7);

        sb.append("{UsuarioRolId=");
        sb.append(getUsuarioRolId());
        sb.append(", usuarioId=");
        sb.append(getUsuarioId());
        sb.append(", rolId=");
        sb.append(getRolId());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(13);

        sb.append("<model><model-name>");
        sb.append("ec.com.smx.portal.rrhh.services.model.UsuarioRol");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>UsuarioRolId</column-name><column-value><![CDATA[");
        sb.append(getUsuarioRolId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>usuarioId</column-name><column-value><![CDATA[");
        sb.append(getUsuarioId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rolId</column-name><column-value><![CDATA[");
        sb.append(getRolId());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
