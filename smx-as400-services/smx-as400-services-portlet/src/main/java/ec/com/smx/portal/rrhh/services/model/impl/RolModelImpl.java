package ec.com.smx.portal.rrhh.services.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import ec.com.smx.portal.rrhh.services.model.Rol;
import ec.com.smx.portal.rrhh.services.model.RolModel;
import ec.com.smx.portal.rrhh.services.model.RolSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Rol service. Represents a row in the &quot;rolid&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ec.com.smx.portal.rrhh.services.model.RolModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RolImpl}.
 * </p>
 *
 * @author maballe
 * @see RolImpl
 * @see ec.com.smx.portal.rrhh.services.model.Rol
 * @see ec.com.smx.portal.rrhh.services.model.RolModel
 * @generated
 */
@JSON(strict = true)
public class RolModelImpl extends BaseModelImpl<Rol> implements RolModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a rol model instance should use the {@link ec.com.smx.portal.rrhh.services.model.Rol} interface instead.
     */
    public static final String TABLE_NAME = "rolid";
    public static final Object[][] TABLE_COLUMNS = {
            { "rolid", Types.BIGINT },
            { "nombre", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table rolid (rolid LONG not null primary key,nombre VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table rolid";
    public static final String ORDER_BY_JPQL = " ORDER BY rol.rolId ASC";
    public static final String ORDER_BY_SQL = " ORDER BY rolid.rolid ASC";
    public static final String DATA_SOURCE = "anotherDataSource";
    public static final String SESSION_FACTORY = "anotherSessionFactory";
    public static final String TX_MANAGER = "anotherTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.ec.com.smx.portal.rrhh.services.model.Rol"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.ec.com.smx.portal.rrhh.services.model.Rol"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.ec.com.smx.portal.rrhh.services.model.Rol"));
    private static ClassLoader _classLoader = Rol.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] { Rol.class };
    private long _rolId;
    private String _nombre;
    private Rol _escapedModel;

    public RolModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static Rol toModel(RolSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        Rol model = new RolImpl();

        model.setRolId(soapModel.getRolId());
        model.setNombre(soapModel.getNombre());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<Rol> toModels(RolSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<Rol> models = new ArrayList<Rol>(soapModels.length);

        for (RolSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public long getPrimaryKey() {
        return _rolId;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setRolId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _rolId;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return Rol.class;
    }

    @Override
    public String getModelClassName() {
        return Rol.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("rolId", getRolId());
        attributes.put("nombre", getNombre());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long rolId = (Long) attributes.get("rolId");

        if (rolId != null) {
            setRolId(rolId);
        }

        String nombre = (String) attributes.get("nombre");

        if (nombre != null) {
            setNombre(nombre);
        }
    }

    @JSON
    @Override
    public long getRolId() {
        return _rolId;
    }

    @Override
    public void setRolId(long rolId) {
        _rolId = rolId;
    }

    @JSON
    @Override
    public String getNombre() {
        if (_nombre == null) {
            return StringPool.BLANK;
        } else {
            return _nombre;
        }
    }

    @Override
    public void setNombre(String nombre) {
        _nombre = nombre;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            Rol.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public Rol toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Rol) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        RolImpl rolImpl = new RolImpl();

        rolImpl.setRolId(getRolId());
        rolImpl.setNombre(getNombre());

        rolImpl.resetOriginalValues();

        return rolImpl;
    }

    @Override
    public int compareTo(Rol rol) {
        long primaryKey = rol.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Rol)) {
            return false;
        }

        Rol rol = (Rol) obj;

        long primaryKey = rol.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<Rol> toCacheModel() {
        RolCacheModel rolCacheModel = new RolCacheModel();

        rolCacheModel.rolId = getRolId();

        rolCacheModel.nombre = getNombre();

        String nombre = rolCacheModel.nombre;

        if ((nombre != null) && (nombre.length() == 0)) {
            rolCacheModel.nombre = null;
        }

        return rolCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(5);

        sb.append("{rolId=");
        sb.append(getRolId());
        sb.append(", nombre=");
        sb.append(getNombre());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(10);

        sb.append("<model><model-name>");
        sb.append("ec.com.smx.portal.rrhh.services.model.Rol");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>rolId</column-name><column-value><![CDATA[");
        sb.append(getRolId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>nombre</column-name><column-value><![CDATA[");
        sb.append(getNombre());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
