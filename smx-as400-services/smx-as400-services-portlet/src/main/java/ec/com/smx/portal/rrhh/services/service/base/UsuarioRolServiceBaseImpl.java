package ec.com.smx.portal.rrhh.services.service.base;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.BaseServiceImpl;
import com.liferay.portal.service.persistence.UserPersistence;

import ec.com.smx.portal.rrhh.services.model.UsuarioRol;
import ec.com.smx.portal.rrhh.services.service.UsuarioRolService;
import ec.com.smx.portal.rrhh.services.service.persistence.RolPersistence;
import ec.com.smx.portal.rrhh.services.service.persistence.UsuarioPersistence;
import ec.com.smx.portal.rrhh.services.service.persistence.UsuarioRolPersistence;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the usuario rol remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link ec.com.smx.portal.rrhh.services.service.impl.UsuarioRolServiceImpl}.
 * </p>
 *
 * @author maballe
 * @see ec.com.smx.portal.rrhh.services.service.impl.UsuarioRolServiceImpl
 * @see ec.com.smx.portal.rrhh.services.service.UsuarioRolServiceUtil
 * @generated
 */
public abstract class UsuarioRolServiceBaseImpl extends BaseServiceImpl
    implements UsuarioRolService, IdentifiableBean {
    @BeanReference(type = ec.com.smx.portal.rrhh.services.service.RolLocalService.class)
    protected ec.com.smx.portal.rrhh.services.service.RolLocalService rolLocalService;
    @BeanReference(type = ec.com.smx.portal.rrhh.services.service.RolService.class)
    protected ec.com.smx.portal.rrhh.services.service.RolService rolService;
    @BeanReference(type = RolPersistence.class)
    protected RolPersistence rolPersistence;
    @BeanReference(type = ec.com.smx.portal.rrhh.services.service.UsuarioLocalService.class)
    protected ec.com.smx.portal.rrhh.services.service.UsuarioLocalService usuarioLocalService;
    @BeanReference(type = ec.com.smx.portal.rrhh.services.service.UsuarioService.class)
    protected ec.com.smx.portal.rrhh.services.service.UsuarioService usuarioService;
    @BeanReference(type = UsuarioPersistence.class)
    protected UsuarioPersistence usuarioPersistence;
    @BeanReference(type = ec.com.smx.portal.rrhh.services.service.UsuarioRolLocalService.class)
    protected ec.com.smx.portal.rrhh.services.service.UsuarioRolLocalService usuarioRolLocalService;
    @BeanReference(type = ec.com.smx.portal.rrhh.services.service.UsuarioRolService.class)
    protected ec.com.smx.portal.rrhh.services.service.UsuarioRolService usuarioRolService;
    @BeanReference(type = UsuarioRolPersistence.class)
    protected UsuarioRolPersistence usuarioRolPersistence;
    @BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
    protected com.liferay.counter.service.CounterLocalService counterLocalService;
    @BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
    protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
    @BeanReference(type = com.liferay.portal.service.UserLocalService.class)
    protected com.liferay.portal.service.UserLocalService userLocalService;
    @BeanReference(type = com.liferay.portal.service.UserService.class)
    protected com.liferay.portal.service.UserService userService;
    @BeanReference(type = UserPersistence.class)
    protected UserPersistence userPersistence;
    private String _beanIdentifier;
    private ClassLoader _classLoader;
    private UsuarioRolServiceClpInvoker _clpInvoker = new UsuarioRolServiceClpInvoker();

    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. Always use {@link ec.com.smx.portal.rrhh.services.service.UsuarioRolServiceUtil} to access the usuario rol remote service.
     */

    /**
     * Returns the rol local service.
     *
     * @return the rol local service
     */
    public ec.com.smx.portal.rrhh.services.service.RolLocalService getRolLocalService() {
        return rolLocalService;
    }

    /**
     * Sets the rol local service.
     *
     * @param rolLocalService the rol local service
     */
    public void setRolLocalService(
        ec.com.smx.portal.rrhh.services.service.RolLocalService rolLocalService) {
        this.rolLocalService = rolLocalService;
    }

    /**
     * Returns the rol remote service.
     *
     * @return the rol remote service
     */
    public ec.com.smx.portal.rrhh.services.service.RolService getRolService() {
        return rolService;
    }

    /**
     * Sets the rol remote service.
     *
     * @param rolService the rol remote service
     */
    public void setRolService(
        ec.com.smx.portal.rrhh.services.service.RolService rolService) {
        this.rolService = rolService;
    }

    /**
     * Returns the rol persistence.
     *
     * @return the rol persistence
     */
    public RolPersistence getRolPersistence() {
        return rolPersistence;
    }

    /**
     * Sets the rol persistence.
     *
     * @param rolPersistence the rol persistence
     */
    public void setRolPersistence(RolPersistence rolPersistence) {
        this.rolPersistence = rolPersistence;
    }

    /**
     * Returns the usuario local service.
     *
     * @return the usuario local service
     */
    public ec.com.smx.portal.rrhh.services.service.UsuarioLocalService getUsuarioLocalService() {
        return usuarioLocalService;
    }

    /**
     * Sets the usuario local service.
     *
     * @param usuarioLocalService the usuario local service
     */
    public void setUsuarioLocalService(
        ec.com.smx.portal.rrhh.services.service.UsuarioLocalService usuarioLocalService) {
        this.usuarioLocalService = usuarioLocalService;
    }

    /**
     * Returns the usuario remote service.
     *
     * @return the usuario remote service
     */
    public ec.com.smx.portal.rrhh.services.service.UsuarioService getUsuarioService() {
        return usuarioService;
    }

    /**
     * Sets the usuario remote service.
     *
     * @param usuarioService the usuario remote service
     */
    public void setUsuarioService(
        ec.com.smx.portal.rrhh.services.service.UsuarioService usuarioService) {
        this.usuarioService = usuarioService;
    }

    /**
     * Returns the usuario persistence.
     *
     * @return the usuario persistence
     */
    public UsuarioPersistence getUsuarioPersistence() {
        return usuarioPersistence;
    }

    /**
     * Sets the usuario persistence.
     *
     * @param usuarioPersistence the usuario persistence
     */
    public void setUsuarioPersistence(UsuarioPersistence usuarioPersistence) {
        this.usuarioPersistence = usuarioPersistence;
    }

    /**
     * Returns the usuario rol local service.
     *
     * @return the usuario rol local service
     */
    public ec.com.smx.portal.rrhh.services.service.UsuarioRolLocalService getUsuarioRolLocalService() {
        return usuarioRolLocalService;
    }

    /**
     * Sets the usuario rol local service.
     *
     * @param usuarioRolLocalService the usuario rol local service
     */
    public void setUsuarioRolLocalService(
        ec.com.smx.portal.rrhh.services.service.UsuarioRolLocalService usuarioRolLocalService) {
        this.usuarioRolLocalService = usuarioRolLocalService;
    }

    /**
     * Returns the usuario rol remote service.
     *
     * @return the usuario rol remote service
     */
    public ec.com.smx.portal.rrhh.services.service.UsuarioRolService getUsuarioRolService() {
        return usuarioRolService;
    }

    /**
     * Sets the usuario rol remote service.
     *
     * @param usuarioRolService the usuario rol remote service
     */
    public void setUsuarioRolService(
        ec.com.smx.portal.rrhh.services.service.UsuarioRolService usuarioRolService) {
        this.usuarioRolService = usuarioRolService;
    }

    /**
     * Returns the usuario rol persistence.
     *
     * @return the usuario rol persistence
     */
    public UsuarioRolPersistence getUsuarioRolPersistence() {
        return usuarioRolPersistence;
    }

    /**
     * Sets the usuario rol persistence.
     *
     * @param usuarioRolPersistence the usuario rol persistence
     */
    public void setUsuarioRolPersistence(
        UsuarioRolPersistence usuarioRolPersistence) {
        this.usuarioRolPersistence = usuarioRolPersistence;
    }

    /**
     * Returns the counter local service.
     *
     * @return the counter local service
     */
    public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
        return counterLocalService;
    }

    /**
     * Sets the counter local service.
     *
     * @param counterLocalService the counter local service
     */
    public void setCounterLocalService(
        com.liferay.counter.service.CounterLocalService counterLocalService) {
        this.counterLocalService = counterLocalService;
    }

    /**
     * Returns the resource local service.
     *
     * @return the resource local service
     */
    public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
        return resourceLocalService;
    }

    /**
     * Sets the resource local service.
     *
     * @param resourceLocalService the resource local service
     */
    public void setResourceLocalService(
        com.liferay.portal.service.ResourceLocalService resourceLocalService) {
        this.resourceLocalService = resourceLocalService;
    }

    /**
     * Returns the user local service.
     *
     * @return the user local service
     */
    public com.liferay.portal.service.UserLocalService getUserLocalService() {
        return userLocalService;
    }

    /**
     * Sets the user local service.
     *
     * @param userLocalService the user local service
     */
    public void setUserLocalService(
        com.liferay.portal.service.UserLocalService userLocalService) {
        this.userLocalService = userLocalService;
    }

    /**
     * Returns the user remote service.
     *
     * @return the user remote service
     */
    public com.liferay.portal.service.UserService getUserService() {
        return userService;
    }

    /**
     * Sets the user remote service.
     *
     * @param userService the user remote service
     */
    public void setUserService(
        com.liferay.portal.service.UserService userService) {
        this.userService = userService;
    }

    /**
     * Returns the user persistence.
     *
     * @return the user persistence
     */
    public UserPersistence getUserPersistence() {
        return userPersistence;
    }

    /**
     * Sets the user persistence.
     *
     * @param userPersistence the user persistence
     */
    public void setUserPersistence(UserPersistence userPersistence) {
        this.userPersistence = userPersistence;
    }

    public void afterPropertiesSet() {
        Class<?> clazz = getClass();

        _classLoader = clazz.getClassLoader();
    }

    public void destroy() {
    }

    /**
     * Returns the Spring bean ID for this bean.
     *
     * @return the Spring bean ID for this bean
     */
    @Override
    public String getBeanIdentifier() {
        return _beanIdentifier;
    }

    /**
     * Sets the Spring bean ID for this bean.
     *
     * @param beanIdentifier the Spring bean ID for this bean
     */
    @Override
    public void setBeanIdentifier(String beanIdentifier) {
        _beanIdentifier = beanIdentifier;
    }

    @Override
    public Object invokeMethod(String name, String[] parameterTypes,
        Object[] arguments) throws Throwable {
        Thread currentThread = Thread.currentThread();

        ClassLoader contextClassLoader = currentThread.getContextClassLoader();

        if (contextClassLoader != _classLoader) {
            currentThread.setContextClassLoader(_classLoader);
        }

        try {
            return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
        } finally {
            if (contextClassLoader != _classLoader) {
                currentThread.setContextClassLoader(contextClassLoader);
            }
        }
    }

    protected Class<?> getModelClass() {
        return UsuarioRol.class;
    }

    protected String getModelClassName() {
        return UsuarioRol.class.getName();
    }

    /**
     * Performs an SQL query.
     *
     * @param sql the sql query
     */
    protected void runSQL(String sql) throws SystemException {
        try {
            DataSource dataSource = usuarioRolPersistence.getDataSource();

            SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
                    sql, new int[0]);

            sqlUpdate.update();
        } catch (Exception e) {
            throw new SystemException(e);
        }
    }
}
